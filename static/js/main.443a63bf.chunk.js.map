{"version":3,"sources":["components/BigContact/index.js","components/ListContact/index.js","components/Navbar/index.js","components/Sort/index.js","components/Search/index.js","components/Container/index.js","App.js","index.js"],"names":["BigContact","props","className","src","picture","alt","fullname","phone","onClick","window","open","email","ListContact","active","name","id","handleSelection","Navbar","href","Sort","sort","handleSortChange","direction","Search","type","onChange","handleInputChange","Container","state","query","currentId","currentData","contacts","contactList","event","setState","target","getAttribute","updateCurrent","console","log","currentContact","filter","item","updateResults","value","newThing","person","toLowerCase","includes","sortThem","this","toBeSorted","a","b","x","y","directionType","map","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.443a63bf.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction BigContact(props) {\n    return (\n        <div className=\"mainCard collection col s12 m6\">\n            <img src={props.picture}\n                alt={props.fullname + \" profile picture\"} className=\"circle center-align bigImage\" />\n            <h3 className=\"center-align\">{props.fullname}</h3>\n            <div className=\"row center-align\">\n                <h6>Phone: {props.phone}</h6>\n                <button onClick={() => window.open(\"tel:\" + props.phone)} className=\"btn\">Call</button>\n            </div>\n            <div className=\"row center-align\">\n                <h6>Email: {props.email} </h6>\n                <button onClick={() => window.open(\"mailto:\" + props.email)} className=\"btn\">Email</button>\n            </div>\n        </div>\n    )\n}\n\nexport default BigContact;","import React from \"react\";\n\nfunction ListContact(props) {\n    return (\n        <li className={props.active? \"collection-item avatar active clickMe\" : \"collection-item avatar clickMe\"} name={props.id} onClick={props.handleSelection}>\n            <img name={props.id} src={props.picture} alt={props.fullname + \" profile picture\"} className=\"circle\" />\n            <span name={props.id} className=\"title\">{props.fullname}</span>\n            <p name={props.id}>{props.phone} <br />{props.email}</p>\n        </li>\n    )\n}\n\nexport default ListContact;","import React from \"react\";\n\nfunction Navbar() {\n    return (\n        <nav>\n            <div className=\"nav-wrapper\">\n                <a href=\"/\" className=\"brand-logo center\">Employee Directory</a>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\n\nfunction Sort(props) {\n    return (\n        <div className=\"row\">\n            <p className={props.sort === \"fullname\"? \"sortThis center-align clickMe col offset-s3 s3\": \"center-align clickMe col offset-s3 s3\"} name=\"fullname\" onClick={props.handleSortChange}>Name {props.sort === \"fullname\" && props.direction === \"DESC\"? \"△\":\"▽\"}</p>\n            <p className={props.sort === \"phone\"? \"sortThis center-align clickMe col s3\": \"center-align clickMe col s3\"} name=\"phone\" onClick={props.handleSortChange}>Number {props.sort === \"phone\" && props.direction === \"DESC\"? \"△\":\"▽\"}</p>\n            <p className={props.sort === \"email\"? \"sortThis center-align clickMe col s3\": \"center-align clickMe col s3\"} name=\"email\" onClick={props.handleSortChange}>Email {props.sort === \"email\" && props.direction === \"DESC\"? \"△\":\"▽\"}</p>\n        </div>\n    )\n}\n\nexport default Sort;","import React from \"react\";\n\nfunction Search(props) {\n    return (\n        <div className=\"input-field\">\n            <input id=\"search\" type=\"search\" onChange={props.handleInputChange} />\n            <i className=\"material-icons\">X</i>\n        </div>\n    )\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport BigContact from \"../BigContact\";\nimport ListContact from \"../ListContact\";\nimport Navbar from \"../Navbar\";\nimport Sort from \"../Sort\";\nimport contactList from \"../contacts.json\"\nimport Search from \"../Search\";\n\nclass Container extends Component {\n    state = {\n        query: \"\",\n        currentId: \"1\",\n        currentData: {},\n        contacts: contactList,\n        sort: \"\",\n        direction: \"\"\n    };\n\n    componentDidMount() {\n        this.updateCurrent();\n    }\n\n    handleSelection = event => {\n        this.setState({currentId: event.target.getAttribute(\"name\")}, () => {this.updateCurrent()})\n    }\n\n    updateCurrent = () => {\n        console.log(\"CURRENT CHANGE\")\n        let currentContact = contactList.filter(item => item.id === this.state.currentId)\n        this.setState({ currentData: currentContact[0] }, () => { console.log(this.state.currentData) })\n    }\n\n    handleSortChange = event => {\n        this.updateCurrent();\n        console.log(event.target.getAttribute(\"name\"))\n        if (event.target.getAttribute(\"name\") === this.state.sort) {\n            if (this.state.direction === \"ASC\") {\n                this.setState({ direction: \"DESC\" }, () => { this.updateResults() })\n            } else {\n                this.setState({ direction: \"\", sort: \"\" }, () => { this.updateResults() })\n            }\n        } else {\n            this.setState({ direction: \"ASC\", sort: event.target.getAttribute(\"name\") }, () => { this.updateResults() })\n        }\n        console.log(`Sort: ${this.state.sort}   Direction: ${this.state.direction}`)\n    }\n\n    handleInputChange = event => {\n        console.log(\"handling\")\n        this.setState({ query: event.target.value }, () => { this.updateResults() });\n    };\n\n    updateResults = () => {\n        console.log('filtering...')\n        let newThing = contactList.filter(person => person.fullname.toLowerCase().includes((this.state.query).toLowerCase()) || person.phone.toLowerCase().includes((this.state.query).toLowerCase()));\n        if (this.state.sort !== \"\") {\n            console.log(\"sorting...\")\n            this.sortThem(newThing, this.state.sort, this.state.direction)\n            this.setState({ contacts: newThing });\n        } else {\n            this.setState({ contacts: newThing });\n        }\n    }\n\n    sortThem(toBeSorted, sort, direction) {\n        toBeSorted.sort(function (a, b) {\n            let sortType = sort;\n            let directionType = direction;\n            let x\n            let y\n            switch (sortType) {\n                case \"fullname\":\n                    x = a.fullname.toLowerCase();\n                    y = b.fullname.toLowerCase();\n                    break;\n                case \"email\":\n                    x = a.email.toLowerCase();\n                    y = b.email.toLowerCase();\n                    break;\n                case \"phone\":\n                    x = a.phone.toLowerCase();\n                    y = b.phone.toLowerCase();\n                    break;\n                default:\n                    break\n            }\n            if (directionType === \"ASC\") {\n                if (x < y) { return -1; }\n                if (x > y) { return 1; }\n                return 0;\n            } else {\n                if (x < y) { return 1; }\n                if (x > y) { return -1; }\n                return 0;\n            }\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col s1\">\n                            <p>Search:</p>\n                        </div>\n                        <div className=\"col s11\">\n                            <form>\n                                <Search\n                                    handleInputChange={this.handleInputChange}\n                                />\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"collection col s12 m6\">\n                            <Sort\n                                sort={this.state.sort}\n                                direction={this.state.direction}\n                                handleSortChange={this.handleSortChange}\n                            />\n                            <ul className=\"tableScroll collection\">\n                                {this.state.contacts.map(person => (\n                                    <ListContact\n                                        key={person.id}\n                                        id={person.id}\n                                        fullname={person.fullname}\n                                        picture={person.picture}\n                                        email={person.email}\n                                        phone={person.phone}\n                                        active={person.id === this.state.currentId ? true : false}\n                                        handleSelection = {this.handleSelection}\n                                    />\n                                ))}\n                            </ul>\n                        </div>\n                        {<BigContact\n                            id={this.state.currentId}\n                            fullname={this.state.currentData.fullname}\n                            picture={this.state.currentData.picture}\n                            email={this.state.currentData.email}\n                            phone={this.state.currentData.phone}\n                        />}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Container;","import React from 'react';\nimport Container from \"./components/Container\"\n\n\nfunction App() {\n  return (\n    <Container />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./style.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}